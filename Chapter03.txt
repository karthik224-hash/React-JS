Q)  What is JSX?
->  JSX is neither a string nor a html tag but a syntactic sugar for the React object.
->  By using JSX, instead of writing markup html and logic seperately, the seperation of concerns is emphasized based on loosely 
    coupled units called as "components" which contains both.
->  Browser doesn't understand JSX and a transpiler/compiler is used to convert this to browser understanble js code. Ex: Babel.
->  JSX -> React.create(element) -> React element -> object to be rendered in the DOM.

Q)  Superpowers of JSX.
->  JSX as variable: markup (html-like) syntax can be set in a variable. This creates a react element(object).
->  Javascript expression in JSX: JSX supports all js expresssions by wrapping them in {}.
->  Attributes in JSX: We can pass all the HTML attributes inside jsx tag (attributes must be CamelCase). Even, custom attribute can be 
    created, but it must not use CamelCase.
->  Props in JSX: The values of each attribute can be passed as properties (props) to a react element. Since it can handle dynamic data
    to create react elements.

Q)  Role of type attribute in script tag? What options can I use there?
->  Type attribute of the script tag indicates the type of script. Until HTML 4, type is a required attribute. the value of type can be
    any of folllowing :
1.  // <script type = "" src = "app.js"> </script>
->  In HTML5, type attribute is not mandatory. If type attribute is not present(default), or an empty string (type="") or javascript MIME
    type, it is treated as classic "javascript" file.
2.    //<script type = "module" src = "app.js"></script>
->  If the type is set as module then the code in that jsfile is treated as module.
3.    //<script type = "importmap" src = "app.js"></script>
->  If the type attribute is set importmap, the body of element contains importmap ie an JSON object using which the browser can resolve the 
    module specifiers while important modules.
4.    //<script type = "{$anyothervalue}" src="app.js"></script>
->  If the type attribute contains another value, then the code is treated as data block and will not be processed by the browser. A valid MIME
    type other than Javascript MIME type(Eg:image/png or text/css) must be mentioned. All the other attributes for this type will be ignored even 
    the src attribute.

Q) {TitleComponent} vs {<TitleComponent/>} vs {<TitleComponent></TitleComponent>} in JSX

{TitleComponent} : This value in jsx is considered as jsx expression or variable. If no such variable is present, no output will be shown in the
browser.Console throws the folllowing warning.
{<TitleComponent/>} : This value in jsx is meant for rendering component fucntion that return jsx. This is self closing tag.
{<TitleComponent> </TitleComponent>} : This is same as {<TitleComponent/>} if there are no child inside TitleComponent. If there are children, then 
those values come inside {<TitleComponent></TitleComponent>}.